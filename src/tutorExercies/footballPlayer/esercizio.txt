1) Progettare una classe FootballPlayer che ha i seguenti attributi:
- Id
- Nome
- Cognome
- Numero di presenze
- Numero di gol segnati
- Numero di assist

Implementare un costruttore con tutti gli argomenti e un costruttore
che imposta solo id, nome e cognome. Inoltre scrivere il getter per
ogni attributo e un setter solamente per le presenze, i gol e gli assist.
La classe avrà infine i seguenti metodi:
- score() : questo metodo calcola quanto un giocatore sia incisivo in campo.
Il punteggio è dato da (numeroGol + (0.75*numeroAssist)) / numeroPresenze.

2) Progettare la classe Team che ha i seguenti attributi:
- Id
- Nome
- L'insieme dei giocatori della squadra

Impostare un costruttore in modo che inizializzi id e nome, inizializzando vuoto
l'insieme dei giocatori e un altro costruttore che invece prende come parametro anche
un insieme di giocatori. Aggiungere inoltre nella classe FootballPlayer la squadra in
cui gioca come attributo, con corrispettivi getter e setter.
Implementare infine il seguente metodo:
- printTeam() : stampa riga per riga nome e cognome di ogni giocatore.
- addPlayer(FootballPlayer p) : aggiunge il giocatore p al team.

3) Creare una classe Main nella quale:
a) Istanziare 5 variabili di tipo FootballPlayer (con parametri a scelta) e inserire
3 di loro in un insieme.
b) Istanziare un oggetto di tipo Team teamA passando come parametro al costruttore l'insieme
appena creato.
c) Istanziare un oggetto di tipo Team teamB usando il costruttore senza l'insieme in input e
poi aggiungere ad esso gli altri 2 giocatori con il metodo addPlayer.
d) Stampare tutti i giocatori del teamA che hanno:
- almeno segnato 5 gol oppure ha almeno effettuato 7 assist e
- ha almeno 20 presenze.
e) Istanziare un teamC i cui giocatori sono quelli del teamA più quelli del teamB.
f) Creare una mappa dove le chiavi sono i giocatori del teamC e i valori sono i loro punteggi
calcolati dal metodo score().
g) Stampare tutti i giocatori della mappa che hanno un punteggio superiore a 0.6




Design a FootballPlayer class that has the following attributes:
Id
First name
Last name
Number of appearances
Number of goals scored
Number of assists

Implement a constructor with all arguments and a constructor that sets only id, first name and last name.
Also write the getter for each attribute
and a setter only for attendance, goals and assists.

Finally, the class will have the following methods:
score() : this method calculates how incisive a player is on the field.
The score is given by (numberGols + (0.75*numberAssists)) / numberPresences.
Design the Team class that has the following attributes:
Id
Name
The set of players in the team.
Set up a constructor so that it initializes id and name, initializing the set of players empty,
and another constructor that also takes a set of players as a parameter instead.
Also add in the FootballPlayer class the team in which it plays as an attribute,
with corresponding getters and setters.
Finally, implement the following method:
printTeam() : print line by line first and last name of each player.
addPlayer(FootballPlayer p) : adds player p to the team.
Create a Main class in which to:
a) Instantiate 5 variables of type FootballPlayer (with parameters of your choice) and insert 3 of them into a set.
b) Instantiate an object of type Team teamA by passing the newly created set as a parameter to the constructor.
c) Instantiate an object of type Team teamB using the constructor without the input set and then add the other 2 players to it with the addPlayer method.
d) Print all the players of teamA who have:
at least scored 5 goals or made at least 7 assists and
has at least 20 appearances.
e) Instantiate a teamC whose players are those of teamA plus those of teamB.
f) Create a map where the keys are the players of teamC and the values are their scores computed by the score() method.
g) Print all the players in the map who have a score greater than 0.6